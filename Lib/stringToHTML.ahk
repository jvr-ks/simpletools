; stringToHTML.ahk
; Version 0.002

#Requires AutoHotkey v2

stringToHTML(s, complete := 0){

  convertMap := Map()

  convertMap.Set("&", "&amp;")
  convertMap.Set("<", "&lt;")
  convertMap.Set(">", "&gt;")
  convertMap.Set(Chr(160), "&nbsp;")
  convertMap.Set("¡", "&iexcl;") ; 161
  convertMap.Set("¢", "&cent;")
  convertMap.Set("£", "&pound;")
  convertMap.Set("¤", "&curren;")
  convertMap.Set("¥", "&yen;")
  convertMap.Set("¦", "&brvbar;")
  convertMap.Set("§", "&sect;")
  convertMap.Set("¨", "&uml;")
  convertMap.Set("©", "&copy;")
  convertMap.Set("ª", "&ordf;")
  convertMap.Set("«", "&laquo;")
  convertMap.Set("¬", "&not;")
  convertMap.Set("Chr(173)", "&shy;")
  convertMap.Set("®", "&reg;")
  convertMap.Set("¯", "&macr;")
  convertMap.Set("°", "&deg;")
  convertMap.Set("±", "&plusmn;")
  convertMap.Set("²", "&sup2;")
  convertMap.Set("³", "&sup3;")
  convertMap.Set("´", "&acute;")
  convertMap.Set("µ", "&micro;")
  convertMap.Set("¶", "&para;")
  convertMap.Set("¸", "&cedil;")
  convertMap.Set("¹", "&sup1;")
  convertMap.Set("º", "&ordm;")
  convertMap.Set("»", "&raquo;")
  convertMap.Set("¼", "&frac14;")
  convertMap.Set("½", "&frac12;")
  convertMap.Set("¾", "&frac34;")
  convertMap.Set("¿", "&iquest;")
  convertMap.Set("×", "&times;")
  convertMap.Set("÷", "&divide;")
  convertMap.Set("∀", "&forall;")
  convertMap.Set("∂", "&part;")
  convertMap.Set("∃", "&exist;")
  convertMap.Set("∅", "&empty;")
  convertMap.Set("∇", "&nabla;")
  convertMap.Set("∈", "&isin;")
  convertMap.Set("∉", "&notin;")
  convertMap.Set("∋", "&ni;")
  convertMap.Set("∏", "&prod;")
  convertMap.Set("∑", "&sum;")
  convertMap.Set("−", "&minus;")
  convertMap.Set("∗", "&lowast;")
  convertMap.Set("√", "&radic;")
  convertMap.Set("∝", "&prop;")
  convertMap.Set("∞", "&infin;")
  convertMap.Set("∠", "&ang;")
  convertMap.Set("∧", "&and;")
  convertMap.Set("∨", "&or;")
  convertMap.Set("∩", "&cap;")
  convertMap.Set("∪", "&cup;")
  convertMap.Set("∫", "&int;")
  convertMap.Set("∴", "&there4;")
  convertMap.Set("∼", "&sim;")
  convertMap.Set("≅", "&cong;")
  convertMap.Set("≈", "&asymp;")
  convertMap.Set("≠", "&ne;")
  convertMap.Set("≡", "&equiv;")
  convertMap.Set("≤", "&le;")
  convertMap.Set("≥", "&ge;")
  convertMap.Set("⊂", "&sub;")
  convertMap.Set("⊃", "&sup;")
  convertMap.Set("⊄", "&nsub;")
  convertMap.Set("⊆", "&sube;")
  convertMap.Set("⊇", "&supe;")
  convertMap.Set("⊕", "&oplus;")
  convertMap.Set("⊗", "&otimes;")
  convertMap.Set("⊥", "&perp;")
  convertMap.Set("⋅", "&sdot;")
  convertMap.Set("Α", "&Alpha;")
  convertMap.Set("Β", "&Beta;")
  convertMap.Set("Γ", "&Gamma;")
  convertMap.Set("Δ", "&Delta;")
  convertMap.Set("Ε", "&Epsilon;")
  convertMap.Set("Ζ", "&Zeta;")
  convertMap.Set("Η", "&Eta;")
  convertMap.Set("Θ", "&Theta;")
  convertMap.Set("Ι", "&Iota;")
  convertMap.Set("Κ", "&Kappa;")
  convertMap.Set("Λ", "&Lambda;")
  convertMap.Set("Μ", "&Mu;")
  convertMap.Set("Ν", "&Nu;")
  convertMap.Set("Ξ", "&Xi;")
  convertMap.Set("Ο", "&Omicron;")
  convertMap.Set("Π", "&Pi;")
  convertMap.Set("Ρ", "&Rho;")
  convertMap.Set("Σ", "&Sigma;")
  convertMap.Set("Τ", "&Tau;")
  convertMap.Set("Υ", "&Upsilon;")
  convertMap.Set("Φ", "&Phi;")
  convertMap.Set("Χ", "&Chi;")
  convertMap.Set("Ψ", "&Psi;")
  convertMap.Set("Ω", "&Omega;")
  convertMap.Set("α", "&alpha;")
  convertMap.Set("β", "&beta;")
  convertMap.Set("γ", "&gamma;")
  convertMap.Set("δ", "&delta;")
  convertMap.Set("ε", "&epsilon;")
  convertMap.Set("ζ", "&zeta;")
  convertMap.Set("η", "&eta;")
  convertMap.Set("θ", "&theta;")
  convertMap.Set("ι", "&iota;")
  convertMap.Set("κ", "&kappa;")
  convertMap.Set("λ", "&lambda;")
  convertMap.Set("μ", "&mu;")
  convertMap.Set("ν", "&nu;")
  convertMap.Set("ξ", "&xi;")
  convertMap.Set("ο", "&omicron;")
  convertMap.Set("π", "&pi;")
  convertMap.Set("ρ", "&rho;")
  convertMap.Set("ς", "&sigmaf;")
  convertMap.Set("σ", "&sigma;")
  convertMap.Set("τ", "&tau;")
  convertMap.Set("υ", "&upsilon;")
  convertMap.Set("φ", "&phi;")
  convertMap.Set("χ", "&chi;")
  convertMap.Set("ψ", "&psi;")
  convertMap.Set("ω", "&omega;")
  convertMap.Set("ϑ", "&thetasym;")
  convertMap.Set("ϒ", "&upsih;")
  convertMap.Set("ϖ", "&piv;")
  convertMap.Set("Œ", "&OElig;")
  convertMap.Set("œ", "&oelig;")
  convertMap.Set("Š", "&Scaron;")
  convertMap.Set("š", "&scaron;")
  convertMap.Set("Ÿ", "&Yuml;")
  convertMap.Set("ƒ", "&fnof;")
  convertMap.Set("ˆ", "&circ;")
  convertMap.Set("˜", "&tilde;")
  convertMap.Set("Chr(8194)", "&ensp;")
  convertMap.Set("Chr(8195)", "&emsp;")
  convertMap.Set("Chr(8201)", "&thinsp;")
  convertMap.Set("Chr(8204)", "&zwnj;")
  convertMap.Set("Chr(8205)", "&zwj;")
  convertMap.Set("Chr(8206)", "&lrm;")
  convertMap.Set("Chr(8207)", "&rlm;")
  convertMap.Set("–", "&ndash;")
  convertMap.Set("—", "&mdash;")
  convertMap.Set("‘", "&lsquo;")
  convertMap.Set("’", "&rsquo;")
  convertMap.Set("‚", "&sbquo;")
  convertMap.Set("“", "&ldquo;")
  convertMap.Set("”", "&rdquo;")
  convertMap.Set("„", "&bdquo;")
  convertMap.Set("†", "&dagger;")
  convertMap.Set("‡", "&Dagger;")
  convertMap.Set("•", "&bull;")
  convertMap.Set("…", "&hellip;")
  convertMap.Set("‰", "&permil;")
  convertMap.Set("′", "&prime;")
  convertMap.Set("″", "&Prime;")
  convertMap.Set("‹", "&lsaquo;")
  convertMap.Set("›", "&rsaquo;")
  convertMap.Set("‾", "&oline;")
  convertMap.Set("€", "&euro;")
  convertMap.Set("™", "&trade;")
  convertMap.Set("←", "&larr;")
  convertMap.Set("↑", "&uarr;")
  convertMap.Set("→", "&rarr;")
  convertMap.Set("↓", "&darr;")
  convertMap.Set("↔", "&harr;")
  convertMap.Set("↵", "&crarr;")
  convertMap.Set("⌈", "&lceil;")
  convertMap.Set("⌉", "&rceil;")
  convertMap.Set("⌊", "&lfloor;")
  convertMap.Set("⌋", "&rfloor;")
  convertMap.Set("◊", "&loz;")
  convertMap.Set("♠", "&spades;")
  convertMap.Set("♣", "&clubs;")
  convertMap.Set("♥", "&hearts;")
  convertMap.Set("♦", "&diams;")

  ret := ""

  Loop Parse s {
    if (convertMap.Has(A_Loopfield)){
      ret .= convertMap.Get(A_Loopfield)
    } else {
      ret .= A_Loopfield
    }
  }

  return ret
}











